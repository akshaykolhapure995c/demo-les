#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MortgageTransfer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TSGProduction")]
	public partial class TSGDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertFTPLog(FTPLog instance);
    partial void UpdateFTPLog(FTPLog instance);
    partial void DeleteFTPLog(FTPLog instance);
    partial void InsertFTPTransferLogin(FTPTransferLogin instance);
    partial void UpdateFTPTransferLogin(FTPTransferLogin instance);
    partial void DeleteFTPTransferLogin(FTPTransferLogin instance);
    partial void InsertCompanyAceMapping(CompanyAceMapping instance);
    partial void UpdateCompanyAceMapping(CompanyAceMapping instance);
    partial void DeleteCompanyAceMapping(CompanyAceMapping instance);
    partial void InsertCompany(Company instance);
    partial void UpdateCompany(Company instance);
    partial void DeleteCompany(Company instance);
    partial void InsertDeal(Deal instance);
    partial void UpdateDeal(Deal instance);
    partial void DeleteDeal(Deal instance);
    partial void InsertLoanDeal(LoanDeal instance);
    partial void UpdateLoanDeal(LoanDeal instance);
    partial void DeleteLoanDeal(LoanDeal instance);
    partial void InsertLoanFileDownload(LoanFileDownload instance);
    partial void UpdateLoanFileDownload(LoanFileDownload instance);
    partial void DeleteLoanFileDownload(LoanFileDownload instance);
    partial void InsertLoanfile(Loanfile instance);
    partial void UpdateLoanfile(Loanfile instance);
    partial void DeleteLoanfile(Loanfile instance);
    partial void InsertLoanFileAudit(LoanFileAudit instance);
    partial void UpdateLoanFileAudit(LoanFileAudit instance);
    partial void DeleteLoanFileAudit(LoanFileAudit instance);
    partial void InsertFTPDirectory(FTPDirectory instance);
    partial void UpdateFTPDirectory(FTPDirectory instance);
    partial void DeleteFTPDirectory(FTPDirectory instance);
    partial void InsertFTPSubDirectory(FTPSubDirectory instance);
    partial void UpdateFTPSubDirectory(FTPSubDirectory instance);
    partial void DeleteFTPSubDirectory(FTPSubDirectory instance);
    partial void InsertCompanyFolder(CompanyFolder instance);
    partial void UpdateCompanyFolder(CompanyFolder instance);
    partial void DeleteCompanyFolder(CompanyFolder instance);
    partial void InsertLoanfileAssignment(LoanfileAssignment instance);
    partial void UpdateLoanfileAssignment(LoanfileAssignment instance);
    partial void DeleteLoanfileAssignment(LoanfileAssignment instance);
    partial void InsertLoanFileFRDate(LoanFileFRDate instance);
    partial void UpdateLoanFileFRDate(LoanFileFRDate instance);
    partial void DeleteLoanFileFRDate(LoanFileFRDate instance);
    partial void InsertReportServer(ReportServer instance);
    partial void UpdateReportServer(ReportServer instance);
    partial void DeleteReportServer(ReportServer instance);
    #endregion
		
		public TSGDataContext() : 
				base(global::MortgageTransfer.Properties.Settings.Default.TSGConnection, mappingSource)
		{
			OnCreated();
		}
		
		public TSGDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TSGDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TSGDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TSGDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<FTPLog> FTPLogs
		{
			get
			{
				return this.GetTable<FTPLog>();
			}
		}
		
		public System.Data.Linq.Table<FTPTransferLogin> FTPTransferLogins
		{
			get
			{
				return this.GetTable<FTPTransferLogin>();
			}
		}
		
		public System.Data.Linq.Table<CompanyAceMapping> CompanyAceMappings
		{
			get
			{
				return this.GetTable<CompanyAceMapping>();
			}
		}
		
		public System.Data.Linq.Table<Company> Companies
		{
			get
			{
				return this.GetTable<Company>();
			}
		}
		
		public System.Data.Linq.Table<EmailList> EmailLists
		{
			get
			{
				return this.GetTable<EmailList>();
			}
		}
		
		public System.Data.Linq.Table<Deal> Deals
		{
			get
			{
				return this.GetTable<Deal>();
			}
		}
		
		public System.Data.Linq.Table<LoanDeal> LoanDeals
		{
			get
			{
				return this.GetTable<LoanDeal>();
			}
		}
		
		public System.Data.Linq.Table<CompanyDeal> CompanyDeals
		{
			get
			{
				return this.GetTable<CompanyDeal>();
			}
		}
		
		public System.Data.Linq.Table<LoanFileDownload> LoanFileDownloads
		{
			get
			{
				return this.GetTable<LoanFileDownload>();
			}
		}
		
		public System.Data.Linq.Table<Loanfile> Loanfiles
		{
			get
			{
				return this.GetTable<Loanfile>();
			}
		}
		
		public System.Data.Linq.Table<LoanFileAudit> LoanFileAudits
		{
			get
			{
				return this.GetTable<LoanFileAudit>();
			}
		}
		
		public System.Data.Linq.Table<ComboBoxFill> ComboBoxFills
		{
			get
			{
				return this.GetTable<ComboBoxFill>();
			}
		}
		
		public System.Data.Linq.Table<FTPDirectory> FTPDirectories
		{
			get
			{
				return this.GetTable<FTPDirectory>();
			}
		}
		
		public System.Data.Linq.Table<FTPSubDirectory> FTPSubDirectories
		{
			get
			{
				return this.GetTable<FTPSubDirectory>();
			}
		}
		
		public System.Data.Linq.Table<CompanyFolder> CompanyFolders
		{
			get
			{
				return this.GetTable<CompanyFolder>();
			}
		}
		
		public System.Data.Linq.Table<LoanfileAssignment> LoanfileAssignments
		{
			get
			{
				return this.GetTable<LoanfileAssignment>();
			}
		}
		
		public System.Data.Linq.Table<LoanFileFRDate> LoanFileFRDates
		{
			get
			{
				return this.GetTable<LoanFileFRDate>();
			}
		}
		
		public System.Data.Linq.Table<AuditData> AuditDatas
		{
			get
			{
				return this.GetTable<AuditData>();
			}
		}
		
		public System.Data.Linq.Table<ReportServer> ReportServers
		{
			get
			{
				return this.GetTable<ReportServer>();
			}
		}
		
		public System.Data.Linq.Table<LoanDetail> LoanDetails
		{
			get
			{
				return this.GetTable<LoanDetail>();
			}
		}
		
		public System.Data.Linq.Table<SweeperFolders> SweeperFolders
		{
			get
			{
				return this.GetTable<SweeperFolders>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FTPLog")]
	public partial class FTPLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FTPLogID;
		
		private string _FileTransferFrom;
		
		private string _FileTransferTo;
		
		private System.Nullable<bool> _IsDownload;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<bool> _DeletedFromServer;
		
		private System.Nullable<double> _FileLength;
		
		private System.Nullable<int> _CompanyID;
		
		private System.Nullable<bool> _IsFulfillment;
		
		private string _FileTransferBackup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFTPLogIDChanging(int value);
    partial void OnFTPLogIDChanged();
    partial void OnFileTransferFromChanging(string value);
    partial void OnFileTransferFromChanged();
    partial void OnFileTransferToChanging(string value);
    partial void OnFileTransferToChanged();
    partial void OnIsDownloadChanging(System.Nullable<bool> value);
    partial void OnIsDownloadChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDeletedFromServerChanging(System.Nullable<bool> value);
    partial void OnDeletedFromServerChanged();
    partial void OnFileLengthChanging(System.Nullable<double> value);
    partial void OnFileLengthChanged();
    partial void OnCompanyIDChanging(System.Nullable<int> value);
    partial void OnCompanyIDChanged();
    partial void OnIsFulfillmentChanging(System.Nullable<bool> value);
    partial void OnIsFulfillmentChanged();
    partial void OnFileTransferBackupChanging(string value);
    partial void OnFileTransferBackupChanged();
    #endregion
		
		public FTPLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FTPLogID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FTPLogID
		{
			get
			{
				return this._FTPLogID;
			}
			set
			{
				if ((this._FTPLogID != value))
				{
					this.OnFTPLogIDChanging(value);
					this.SendPropertyChanging();
					this._FTPLogID = value;
					this.SendPropertyChanged("FTPLogID");
					this.OnFTPLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileTransferFrom", DbType="VarChar(500)")]
		public string FileTransferFrom
		{
			get
			{
				return this._FileTransferFrom;
			}
			set
			{
				if ((this._FileTransferFrom != value))
				{
					this.OnFileTransferFromChanging(value);
					this.SendPropertyChanging();
					this._FileTransferFrom = value;
					this.SendPropertyChanged("FileTransferFrom");
					this.OnFileTransferFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileTransferTo", DbType="VarChar(500)")]
		public string FileTransferTo
		{
			get
			{
				return this._FileTransferTo;
			}
			set
			{
				if ((this._FileTransferTo != value))
				{
					this.OnFileTransferToChanging(value);
					this.SendPropertyChanging();
					this._FileTransferTo = value;
					this.SendPropertyChanged("FileTransferTo");
					this.OnFileTransferToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDownload", DbType="Bit")]
		public System.Nullable<bool> IsDownload
		{
			get
			{
				return this._IsDownload;
			}
			set
			{
				if ((this._IsDownload != value))
				{
					this.OnIsDownloadChanging(value);
					this.SendPropertyChanging();
					this._IsDownload = value;
					this.SendPropertyChanged("IsDownload");
					this.OnIsDownloadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedFromServer", DbType="Bit")]
		public System.Nullable<bool> DeletedFromServer
		{
			get
			{
				return this._DeletedFromServer;
			}
			set
			{
				if ((this._DeletedFromServer != value))
				{
					this.OnDeletedFromServerChanging(value);
					this.SendPropertyChanging();
					this._DeletedFromServer = value;
					this.SendPropertyChanged("DeletedFromServer");
					this.OnDeletedFromServerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileLength", DbType="Float")]
		public System.Nullable<double> FileLength
		{
			get
			{
				return this._FileLength;
			}
			set
			{
				if ((this._FileLength != value))
				{
					this.OnFileLengthChanging(value);
					this.SendPropertyChanging();
					this._FileLength = value;
					this.SendPropertyChanged("FileLength");
					this.OnFileLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFulfillment", DbType="bit")]
		public System.Nullable<bool> IsFulfillment
		{
			get
			{
				return this._IsFulfillment;
			}
			set
			{
				if ((this._IsFulfillment != value))
				{
					this.OnIsFulfillmentChanging(value);
					this.SendPropertyChanging();
					this._IsFulfillment = value;
					this.SendPropertyChanged("IsFulfillment");
					this.OnIsFulfillmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileTransferBackup", DbType="varchar(500)")]
		public string FileTransferBackup
		{
			get
			{
				return this._FileTransferBackup;
			}
			set
			{
				if ((this._FileTransferBackup != value))
				{
					this.OnFileTransferBackupChanging(value);
					this.SendPropertyChanging();
					this._FileTransferBackup = value;
					this.SendPropertyChanged("FileTransferBackup");
					this.OnFileTransferBackupChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FTPTransferLogin")]
	public partial class FTPTransferLogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FTPTransferLoginID;
		
		private System.Nullable<System.DateTime> _LastVerified;
		
		private string _PersonLogged;
		
		private System.Nullable<System.DateTime> _NextRun;
		
		private System.Nullable<System.DateTime> _LastRun;
		
		private System.Nullable<bool> _Insystem;
		
		private System.Nullable<bool> _CurrentTransfer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFTPTransferLoginIDChanging(int value);
    partial void OnFTPTransferLoginIDChanged();
    partial void OnLastVerifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnLastVerifiedChanged();
    partial void OnPersonLoggedChanging(string value);
    partial void OnPersonLoggedChanged();
    partial void OnNextMortgageRunChanging(System.Nullable<System.DateTime> value);
    partial void OnNextMortgageRunChanged();
    partial void OnLastMortgageRunChanging(System.Nullable<System.DateTime> value);
    partial void OnLastMortgageRunChanged();
    partial void OnInsystemChanging(System.Nullable<bool> value);
    partial void OnInsystemChanged();
    partial void OnCurrentTransferChanging(System.Nullable<bool> value);
    partial void OnCurrentTransferChanged();
    #endregion
		
		public FTPTransferLogin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FTPTransferLoginID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FTPTransferLoginID
		{
			get
			{
				return this._FTPTransferLoginID;
			}
			set
			{
				if ((this._FTPTransferLoginID != value))
				{
					this.OnFTPTransferLoginIDChanging(value);
					this.SendPropertyChanging();
					this._FTPTransferLoginID = value;
					this.SendPropertyChanged("FTPTransferLoginID");
					this.OnFTPTransferLoginIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastVerified", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastVerified
		{
			get
			{
				return this._LastVerified;
			}
			set
			{
				if ((this._LastVerified != value))
				{
					this.OnLastVerifiedChanging(value);
					this.SendPropertyChanging();
					this._LastVerified = value;
					this.SendPropertyChanged("LastVerified");
					this.OnLastVerifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonLogged", DbType="VarChar(50)")]
		public string PersonLogged
		{
			get
			{
				return this._PersonLogged;
			}
			set
			{
				if ((this._PersonLogged != value))
				{
					this.OnPersonLoggedChanging(value);
					this.SendPropertyChanging();
					this._PersonLogged = value;
					this.SendPropertyChanged("PersonLogged");
					this.OnPersonLoggedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextRun", DbType="DateTime")]
		public System.Nullable<System.DateTime> NextMortgageRun
		{
			get
			{
				return this._NextRun;
			}
			set
			{
				if ((this._NextRun != value))
				{
					this.OnNextMortgageRunChanging(value);
					this.SendPropertyChanging();
					this._NextRun = value;
					this.SendPropertyChanged("NextMortgageRun");
					this.OnNextMortgageRunChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastRun", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastMortgageRun
		{
			get
			{
				return this._LastRun;
			}
			set
			{
				if ((this._LastRun != value))
				{
					this.OnLastMortgageRunChanging(value);
					this.SendPropertyChanging();
					this._LastRun = value;
					this.SendPropertyChanged("LastMortgageRun");
					this.OnLastMortgageRunChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Insystem", DbType="Bit")]
		public System.Nullable<bool> Insystem
		{
			get
			{
				return this._Insystem;
			}
			set
			{
				if ((this._Insystem != value))
				{
					this.OnInsystemChanging(value);
					this.SendPropertyChanging();
					this._Insystem = value;
					this.SendPropertyChanged("Insystem");
					this.OnInsystemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentTransfer", DbType="bit")]
		public System.Nullable<bool> CurrentTransfer
		{
			get
			{
				return this._CurrentTransfer;
			}
			set
			{
				if ((this._CurrentTransfer != value))
				{
					this.OnCurrentTransferChanging(value);
					this.SendPropertyChanging();
					this._CurrentTransfer = value;
					this.SendPropertyChanged("CurrentTransfer");
					this.OnCurrentTransferChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompanyAceMappings")]
	public partial class CompanyAceMapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CompanyID;
		
		private System.Nullable<int> _ACESClientID;
		
		private System.Nullable<bool> _HasOrphans;
		
		private System.Nullable<System.DateTime> _LastRun;
		
		private System.Nullable<bool> _ExternalMappings;
		
		private string _CompanyShortName;
		
		private System.Nullable<int> _CompanyParentID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnACESClientIDChanging(System.Nullable<int> value);
    partial void OnACESClientIDChanged();
    partial void OnHasOrphansChanging(System.Nullable<bool> value);
    partial void OnHasOrphansChanged();
    partial void OnLastMortgageRunChanging(System.Nullable<System.DateTime> value);
    partial void OnLastMortgageRunChanged();
    partial void OnExternalMappingsChanging(System.Nullable<bool> value);
    partial void OnExternalMappingsChanged();
    partial void OnCompanyShortNameChanging(string value);
    partial void OnCompanyShortNameChanged();
    partial void OnCompanyParentIDChanging(System.Nullable<int> value);
    partial void OnCompanyParentIDChanged();
    #endregion
		
		public CompanyAceMapping()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACESClientID", DbType="Int")]
		public System.Nullable<int> ACESClientID
		{
			get
			{
				return this._ACESClientID;
			}
			set
			{
				if ((this._ACESClientID != value))
				{
					this.OnACESClientIDChanging(value);
					this.SendPropertyChanging();
					this._ACESClientID = value;
					this.SendPropertyChanged("ACESClientID");
					this.OnACESClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasOrphans", DbType="bit")]
		public System.Nullable<bool> HasOrphans
		{
			get
			{
				return this._HasOrphans;
			}
			set
			{
				if ((this._HasOrphans != value))
				{
					this.OnHasOrphansChanging(value);
					this.SendPropertyChanging();
					this._HasOrphans = value;
					this.SendPropertyChanged("HasOrphans");
					this.OnHasOrphansChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastRun", DbType="datetime")]
		public System.Nullable<System.DateTime> LastMortgageRun
		{
			get
			{
				return this._LastRun;
			}
			set
			{
				if ((this._LastRun != value))
				{
					this.OnLastMortgageRunChanging(value);
					this.SendPropertyChanging();
					this._LastRun = value;
					this.SendPropertyChanged("LastMortgageRun");
					this.OnLastMortgageRunChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalMappings", DbType="bit")]
		public System.Nullable<bool> ExternalMappings
		{
			get
			{
				return this._ExternalMappings;
			}
			set
			{
				if ((this._ExternalMappings != value))
				{
					this.OnExternalMappingsChanging(value);
					this.SendPropertyChanging();
					this._ExternalMappings = value;
					this.SendPropertyChanged("ExternalMappings");
					this.OnExternalMappingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyShortName", DbType="varchar(100)")]
		public string CompanyShortName
		{
			get
			{
				return this._CompanyShortName;
			}
			set
			{
				if ((this._CompanyShortName != value))
				{
					this.OnCompanyShortNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyShortName = value;
					this.SendPropertyChanged("CompanyShortName");
					this.OnCompanyShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyParentID", DbType="int")]
		public System.Nullable<int> CompanyParentID
		{
			get
			{
				return this._CompanyParentID;
			}
			set
			{
				if ((this._CompanyParentID != value))
				{
					this.OnCompanyParentIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyParentID = value;
					this.SendPropertyChanged("CompanyParentID");
					this.OnCompanyParentIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Company")]
	public partial class Company : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CompanyID;
		
		private string _Name;
		
		private System.Nullable<bool> _IsActive;
		
		private bool _MDClientSweep;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnMDClientSweepChanging(bool value);
    partial void OnMDClientSweepChanged();
    #endregion
		
		public Company()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MDClientSweep")]
		public bool MDClientSweep
		{
			get
			{
				return this._MDClientSweep;
			}
			set
			{
				if ((this._MDClientSweep != value))
				{
					this.OnMDClientSweepChanging(value);
					this.SendPropertyChanging();
					this._MDClientSweep = value;
					this.SendPropertyChanged("MDClientSweep");
					this.OnMDClientSweepChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class EmailList
	{
		
		private string _AuditDesc;
		
		private int _FileCount;
		
		public EmailList()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDesc", CanBeNull=false)]
		public string AuditDesc
		{
			get
			{
				return this._AuditDesc;
			}
			set
			{
				if ((this._AuditDesc != value))
				{
					this._AuditDesc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileCount")]
		public int FileCount
		{
			get
			{
				return this._FileCount;
			}
			set
			{
				if ((this._FileCount != value))
				{
					this._FileCount = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Deals")]
	public partial class Deal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DealID;
		
		private string _DealName;
		
		private System.Nullable<bool> _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDealIDChanging(int value);
    partial void OnDealIDChanged();
    partial void OnDealNameChanging(string value);
    partial void OnDealNameChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public Deal()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DealID
		{
			get
			{
				return this._DealID;
			}
			set
			{
				if ((this._DealID != value))
				{
					this.OnDealIDChanging(value);
					this.SendPropertyChanging();
					this._DealID = value;
					this.SendPropertyChanged("DealID");
					this.OnDealIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealName", DbType="NVarChar(50)")]
		public string DealName
		{
			get
			{
				return this._DealName;
			}
			set
			{
				if ((this._DealName != value))
				{
					this.OnDealNameChanging(value);
					this.SendPropertyChanging();
					this._DealName = value;
					this.SendPropertyChanged("DealName");
					this.OnDealNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class LoanDeal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ClientName;
		
		private int _LoanID;
		
		private string _LoanNo;
		
		private System.Nullable<int> _LoanStatusID;
		
		private System.Nullable<System.DateTime> _DueDate;
		
		private string _LoanStatusName;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<bool> _IsArchived;
		
		private string _BorrowerName;
		
		private string _CreatedBy;
		
		private string _DealName;
		
		private string _LoanPath;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClientNameChanging(string value);
    partial void OnClientNameChanged();
    partial void OnLoanIDChanging(int value);
    partial void OnLoanIDChanged();
    partial void OnLoanNoChanging(string value);
    partial void OnLoanNoChanged();
    partial void OnLoanStatusIDChanging(System.Nullable<int> value);
    partial void OnLoanStatusIDChanged();
    partial void OnDueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDueDateChanged();
    partial void OnLoanStatusNameChanging(string value);
    partial void OnLoanStatusNameChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnIsArchivedChanging(System.Nullable<bool> value);
    partial void OnIsArchivedChanged();
    partial void OnBorrowerNameChanging(string value);
    partial void OnBorrowerNameChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnDealNameChanging(string value);
    partial void OnDealNameChanged();
    partial void OnLoanPathChanging(string value);
    partial void OnLoanPathChanged();
    #endregion
		
		public LoanDeal()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientName", DbType="varchar(150)")]
		public string ClientName
		{
			get
			{
				return this._ClientName;
			}
			set
			{
				if ((this._ClientName != value))
				{
					this.OnClientNameChanging(value);
					this.SendPropertyChanging();
					this._ClientName = value;
					this.SendPropertyChanged("ClientName");
					this.OnClientNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanID", DbType="int", IsPrimaryKey=true)]
		public int LoanID
		{
			get
			{
				return this._LoanID;
			}
			set
			{
				if ((this._LoanID != value))
				{
					this.OnLoanIDChanging(value);
					this.SendPropertyChanging();
					this._LoanID = value;
					this.SendPropertyChanged("LoanID");
					this.OnLoanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanNo", DbType="nvarchar(50)")]
		public string LoanNo
		{
			get
			{
				return this._LoanNo;
			}
			set
			{
				if ((this._LoanNo != value))
				{
					this.OnLoanNoChanging(value);
					this.SendPropertyChanging();
					this._LoanNo = value;
					this.SendPropertyChanged("LoanNo");
					this.OnLoanNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanStatusID", DbType="int")]
		public System.Nullable<int> LoanStatusID
		{
			get
			{
				return this._LoanStatusID;
			}
			set
			{
				if ((this._LoanStatusID != value))
				{
					this.OnLoanStatusIDChanging(value);
					this.SendPropertyChanging();
					this._LoanStatusID = value;
					this.SendPropertyChanged("LoanStatusID");
					this.OnLoanStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="smalldatetime")]
		public System.Nullable<System.DateTime> DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanStatusName", DbType="nvarchar(50)")]
		public string LoanStatusName
		{
			get
			{
				return this._LoanStatusName;
			}
			set
			{
				if ((this._LoanStatusName != value))
				{
					this.OnLoanStatusNameChanging(value);
					this.SendPropertyChanging();
					this._LoanStatusName = value;
					this.SendPropertyChanged("LoanStatusName");
					this.OnLoanStatusNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="smalldatetime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArchived", DbType="bit")]
		public System.Nullable<bool> IsArchived
		{
			get
			{
				return this._IsArchived;
			}
			set
			{
				if ((this._IsArchived != value))
				{
					this.OnIsArchivedChanging(value);
					this.SendPropertyChanging();
					this._IsArchived = value;
					this.SendPropertyChanged("IsArchived");
					this.OnIsArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BorrowerName", DbType="nvarchar(50)", CanBeNull=false)]
		public string BorrowerName
		{
			get
			{
				return this._BorrowerName;
			}
			set
			{
				if ((this._BorrowerName != value))
				{
					this.OnBorrowerNameChanging(value);
					this.SendPropertyChanging();
					this._BorrowerName = value;
					this.SendPropertyChanged("BorrowerName");
					this.OnBorrowerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="nvarchar(50)", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealName", CanBeNull=false)]
		public string DealName
		{
			get
			{
				return this._DealName;
			}
			set
			{
				if ((this._DealName != value))
				{
					this.OnDealNameChanging(value);
					this.SendPropertyChanging();
					this._DealName = value;
					this.SendPropertyChanged("DealName");
					this.OnDealNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanPath")]
		public string LoanPath
		{
			get
			{
				return this._LoanPath;
			}
			set
			{
				if ((this._LoanPath != value))
				{
					this.OnLoanPathChanging(value);
					this.SendPropertyChanging();
					this._LoanPath = value;
					this.SendPropertyChanged("LoanPath");
					this.OnLoanPathChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompanyDeals")]
	public partial class CompanyDeal
	{
		
		private int _CompanyID;
		
		private int _DealID;
		
		public CompanyDeal()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this._CompanyID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealID", DbType="Int NOT NULL")]
		public int DealID
		{
			get
			{
				return this._DealID;
			}
			set
			{
				if ((this._DealID != value))
				{
					this._DealID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoanFileDownload")]
	public partial class LoanFileDownload : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LoanFileDownloadID;
		
		private System.Nullable<int> _LoanFileID;
		
		private string _FileName;
		
		private System.DateTime _FileReceived;
		
		private double _FileSize;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoanFileDownloadIDChanging(int value);
    partial void OnLoanFileDownloadIDChanged();
    partial void OnLoanFileIDChanging(System.Nullable<int> value);
    partial void OnLoanFileIDChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnFileReceivedChanging(System.DateTime value);
    partial void OnFileReceivedChanged();
    partial void OnFileSizeChanging(double value);
    partial void OnFileSizeChanged();
    #endregion
		
		public LoanFileDownload()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanFileDownloadID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LoanFileDownloadID
		{
			get
			{
				return this._LoanFileDownloadID;
			}
			set
			{
				if ((this._LoanFileDownloadID != value))
				{
					this.OnLoanFileDownloadIDChanging(value);
					this.SendPropertyChanging();
					this._LoanFileDownloadID = value;
					this.SendPropertyChanged("LoanFileDownloadID");
					this.OnLoanFileDownloadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanFileID", DbType="Int")]
		public System.Nullable<int> LoanFileID
		{
			get
			{
				return this._LoanFileID;
			}
			set
			{
				if ((this._LoanFileID != value))
				{
					this.OnLoanFileIDChanging(value);
					this.SendPropertyChanging();
					this._LoanFileID = value;
					this.SendPropertyChanged("LoanFileID");
					this.OnLoanFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="VarChar(150)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileReceived", DbType="datetime")]
		public System.DateTime FileReceived
		{
			get
			{
				return this._FileReceived;
			}
			set
			{
				if ((this._FileReceived != value))
				{
					this.OnFileReceivedChanging(value);
					this.SendPropertyChanging();
					this._FileReceived = value;
					this.SendPropertyChanged("FileReceived");
					this.OnFileReceivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileSize", DbType="float")]
		public double FileSize
		{
			get
			{
				return this._FileSize;
			}
			set
			{
				if ((this._FileSize != value))
				{
					this.OnFileSizeChanging(value);
					this.SendPropertyChanging();
					this._FileSize = value;
					this.SendPropertyChanged("FileSize");
					this.OnFileSizeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Loanfile")]
	public partial class Loanfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LoanfileID;
		
		private int _LoanFileAuditID;
		
		private string _LoanNumber;
		
		private string _LastName;
		
		private System.Nullable<System.DateTime> _Added_Date;
		
		private System.Nullable<int> _FRStatusID;
		
		private System.Nullable<decimal> _FRCost;
		
		private System.Nullable<int> _FRVendorID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoanfileIDChanging(int value);
    partial void OnLoanfileIDChanged();
    partial void OnLoanFileAuditIDChanging(int value);
    partial void OnLoanFileAuditIDChanged();
    partial void OnLoanNumberChanging(string value);
    partial void OnLoanNumberChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnAdded_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnAdded_DateChanged();
    partial void OnFRStatusIDChanging(System.Nullable<int> value);
    partial void OnFRStatusIDChanged();
    partial void OnFRCostChanging(System.Nullable<decimal> value);
    partial void OnFRCostChanged();
    partial void OnFRVendorIDChanging(System.Nullable<int> value);
    partial void OnFRVendorIDChanged();
    #endregion
		
		public Loanfile()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanfileID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LoanfileID
		{
			get
			{
				return this._LoanfileID;
			}
			set
			{
				if ((this._LoanfileID != value))
				{
					this.OnLoanfileIDChanging(value);
					this.SendPropertyChanging();
					this._LoanfileID = value;
					this.SendPropertyChanged("LoanfileID");
					this.OnLoanfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanFileAuditID", DbType="Int")]
		public int LoanFileAuditID
		{
			get
			{
				return this._LoanFileAuditID;
			}
			set
			{
				if ((this._LoanFileAuditID != value))
				{
					this.OnLoanFileAuditIDChanging(value);
					this.SendPropertyChanging();
					this._LoanFileAuditID = value;
					this.SendPropertyChanged("LoanFileAuditID");
					this.OnLoanFileAuditIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanNumber", DbType="varchar(50) NOT NULL", CanBeNull=false)]
		public string LoanNumber
		{
			get
			{
				return this._LoanNumber;
			}
			set
			{
				if ((this._LoanNumber != value))
				{
					this.OnLoanNumberChanging(value);
					this.SendPropertyChanging();
					this._LoanNumber = value;
					this.SendPropertyChanged("LoanNumber");
					this.OnLoanNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="varchar(250)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Added_Date", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> Added_Date
		{
			get
			{
				return this._Added_Date;
			}
			set
			{
				if ((this._Added_Date != value))
				{
					this.OnAdded_DateChanging(value);
					this.SendPropertyChanging();
					this._Added_Date = value;
					this.SendPropertyChanged("Added_Date");
					this.OnAdded_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FRStatusID", DbType="int")]
		public System.Nullable<int> FRStatusID
		{
			get
			{
				return this._FRStatusID;
			}
			set
			{
				if ((this._FRStatusID != value))
				{
					this.OnFRStatusIDChanging(value);
					this.SendPropertyChanging();
					this._FRStatusID = value;
					this.SendPropertyChanged("FRStatusID");
					this.OnFRStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FRCost", DbType="money")]
		public System.Nullable<decimal> FRCost
		{
			get
			{
				return this._FRCost;
			}
			set
			{
				if ((this._FRCost != value))
				{
					this.OnFRCostChanging(value);
					this.SendPropertyChanging();
					this._FRCost = value;
					this.SendPropertyChanged("FRCost");
					this.OnFRCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FRVendorID", DbType="int")]
		public System.Nullable<int> FRVendorID
		{
			get
			{
				return this._FRVendorID;
			}
			set
			{
				if ((this._FRVendorID != value))
				{
					this.OnFRVendorIDChanging(value);
					this.SendPropertyChanging();
					this._FRVendorID = value;
					this.SendPropertyChanged("FRVendorID");
					this.OnFRVendorIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoanFileAudit")]
	public partial class LoanFileAudit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LoanFileAuditID;
		
		private System.Nullable<int> _AuditID;
		
		private System.Nullable<int> _DealID;
		
		private System.Nullable<int> _CompanyID;
		
		private System.Nullable<System.DateTime> _Added_Date;
		
		private System.Nullable<System.DateTime> _ListReceivedDate;
		
		private System.Nullable<System.DateTime> _FileSelectedDate;
		
		private System.Nullable<System.DateTime> _FileReceivedDate;
		
		private System.Nullable<System.DateTime> _QCFileSentDate;
		
		private string _AuditName;
		
		private System.Nullable<int> _ClientID;
		
		private System.Nullable<System.DateTime> _AuditReleaseDate;
		
		private System.Nullable<System.DateTime> _AuditDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoanFileAuditIDChanging(int value);
    partial void OnLoanFileAuditIDChanged();
    partial void OnAuditIDChanging(System.Nullable<int> value);
    partial void OnAuditIDChanged();
    partial void OnDealIDChanging(System.Nullable<int> value);
    partial void OnDealIDChanged();
    partial void OnCompanyIDChanging(System.Nullable<int> value);
    partial void OnCompanyIDChanged();
    partial void OnAdded_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnAdded_DateChanged();
    partial void OnListReceivedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnListReceivedDateChanged();
    partial void OnFileSelectedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFileSelectedDateChanged();
    partial void OnFileReceivedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFileReceivedDateChanged();
    partial void OnQCFileSentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnQCFileSentDateChanged();
    partial void OnAuditNameChanging(string value);
    partial void OnAuditNameChanged();
    partial void OnClientIDChanging(System.Nullable<int> value);
    partial void OnClientIDChanged();
    partial void OnAuditReleaseDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditReleaseDateChanged();
    partial void OnAuditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditDateChanged();
    #endregion
		
		public LoanFileAudit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanFileAuditID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LoanFileAuditID
		{
			get
			{
				return this._LoanFileAuditID;
			}
			set
			{
				if ((this._LoanFileAuditID != value))
				{
					this.OnLoanFileAuditIDChanging(value);
					this.SendPropertyChanging();
					this._LoanFileAuditID = value;
					this.SendPropertyChanged("LoanFileAuditID");
					this.OnLoanFileAuditIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditID", DbType="Int")]
		public System.Nullable<int> AuditID
		{
			get
			{
				return this._AuditID;
			}
			set
			{
				if ((this._AuditID != value))
				{
					this.OnAuditIDChanging(value);
					this.SendPropertyChanging();
					this._AuditID = value;
					this.SendPropertyChanged("AuditID");
					this.OnAuditIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealID", DbType="Int")]
		public System.Nullable<int> DealID
		{
			get
			{
				return this._DealID;
			}
			set
			{
				if ((this._DealID != value))
				{
					this.OnDealIDChanging(value);
					this.SendPropertyChanging();
					this._DealID = value;
					this.SendPropertyChanged("DealID");
					this.OnDealIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Added_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Added_Date
		{
			get
			{
				return this._Added_Date;
			}
			set
			{
				if ((this._Added_Date != value))
				{
					this.OnAdded_DateChanging(value);
					this.SendPropertyChanging();
					this._Added_Date = value;
					this.SendPropertyChanged("Added_Date");
					this.OnAdded_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListReceivedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ListReceivedDate
		{
			get
			{
				return this._ListReceivedDate;
			}
			set
			{
				if ((this._ListReceivedDate != value))
				{
					this.OnListReceivedDateChanging(value);
					this.SendPropertyChanging();
					this._ListReceivedDate = value;
					this.SendPropertyChanged("ListReceivedDate");
					this.OnListReceivedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileSelectedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FileSelectedDate
		{
			get
			{
				return this._FileSelectedDate;
			}
			set
			{
				if ((this._FileSelectedDate != value))
				{
					this.OnFileSelectedDateChanging(value);
					this.SendPropertyChanging();
					this._FileSelectedDate = value;
					this.SendPropertyChanged("FileSelectedDate");
					this.OnFileSelectedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileReceivedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FileReceivedDate
		{
			get
			{
				return this._FileReceivedDate;
			}
			set
			{
				if ((this._FileReceivedDate != value))
				{
					this.OnFileReceivedDateChanging(value);
					this.SendPropertyChanging();
					this._FileReceivedDate = value;
					this.SendPropertyChanged("FileReceivedDate");
					this.OnFileReceivedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QCFileSentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> QCFileSentDate
		{
			get
			{
				return this._QCFileSentDate;
			}
			set
			{
				if ((this._QCFileSentDate != value))
				{
					this.OnQCFileSentDateChanging(value);
					this.SendPropertyChanging();
					this._QCFileSentDate = value;
					this.SendPropertyChanged("QCFileSentDate");
					this.OnQCFileSentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditName", DbType="VarChar(400)")]
		public string AuditName
		{
			get
			{
				return this._AuditName;
			}
			set
			{
				if ((this._AuditName != value))
				{
					this.OnAuditNameChanging(value);
					this.SendPropertyChanging();
					this._AuditName = value;
					this.SendPropertyChanged("AuditName");
					this.OnAuditNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="int")]
		public System.Nullable<int> ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditReleaseDate", DbType="datetime")]
		public System.Nullable<System.DateTime> AuditReleaseDate
		{
			get
			{
				return this._AuditReleaseDate;
			}
			set
			{
				if ((this._AuditReleaseDate != value))
				{
					this.OnAuditReleaseDateChanging(value);
					this.SendPropertyChanging();
					this._AuditReleaseDate = value;
					this.SendPropertyChanged("AuditReleaseDate");
					this.OnAuditReleaseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditDate
		{
			get
			{
				return this._AuditDate;
			}
			set
			{
				if ((this._AuditDate != value))
				{
					this.OnAuditDateChanging(value);
					this.SendPropertyChanging();
					this._AuditDate = value;
					this.SendPropertyChanged("AuditDate");
					this.OnAuditDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="db.ComboBoxFill")]
	public partial class ComboBoxFill
	{
		
		private string _DisplayValue;
		
		private int _ValueID;
		
		private bool _BitField;
		
		public ComboBoxFill()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayValue", DbType="varchar(50)", CanBeNull=false)]
		public string DisplayValue
		{
			get
			{
				return this._DisplayValue;
			}
			set
			{
				if ((this._DisplayValue != value))
				{
					this._DisplayValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueID", DbType="int")]
		public int ValueID
		{
			get
			{
				return this._ValueID;
			}
			set
			{
				if ((this._ValueID != value))
				{
					this._ValueID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BitField")]
		public bool BitField
		{
			get
			{
				return this._BitField;
			}
			set
			{
				if ((this._BitField != value))
				{
					this._BitField = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FTPDirectory")]
	public partial class FTPDirectory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FTPDirectoryID;
		
		private string _Directory;
		
		private bool _HasClientFolders;
		
		private string _DisplayName;
		
		private string _NewFolder;
		
		private System.Nullable<int> _CompanyID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFTPDirectoryIDChanging(int value);
    partial void OnFTPDirectoryIDChanged();
    partial void OnDirectoryNameChanging(string value);
    partial void OnDirectoryNameChanged();
    partial void OnHasClientFoldersChanging(bool value);
    partial void OnHasClientFoldersChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnNewFolderChanging(string value);
    partial void OnNewFolderChanged();
    partial void OnCompanyIDChanging(System.Nullable<int> value);
    partial void OnCompanyIDChanged();
    #endregion
		
		public FTPDirectory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FTPDirectoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FTPDirectoryID
		{
			get
			{
				return this._FTPDirectoryID;
			}
			set
			{
				if ((this._FTPDirectoryID != value))
				{
					this.OnFTPDirectoryIDChanging(value);
					this.SendPropertyChanging();
					this._FTPDirectoryID = value;
					this.SendPropertyChanged("FTPDirectoryID");
					this.OnFTPDirectoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Directory", DbType="VarChar(1000)", CanBeNull=false)]
		public string DirectoryName
		{
			get
			{
				return this._Directory;
			}
			set
			{
				if ((this._Directory != value))
				{
					this.OnDirectoryNameChanging(value);
					this.SendPropertyChanging();
					this._Directory = value;
					this.SendPropertyChanged("DirectoryName");
					this.OnDirectoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasClientFolders", DbType="Bit")]
		public bool HasClientFolders
		{
			get
			{
				return this._HasClientFolders;
			}
			set
			{
				if ((this._HasClientFolders != value))
				{
					this.OnHasClientFoldersChanging(value);
					this.SendPropertyChanging();
					this._HasClientFolders = value;
					this.SendPropertyChanged("HasClientFolders");
					this.OnHasClientFoldersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="varchar(100)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewFolder", DbType="varchar(100)")]
		public string NewFolder
		{
			get
			{
				return this._NewFolder;
			}
			set
			{
				if ((this._NewFolder != value))
				{
					this.OnNewFolderChanging(value);
					this.SendPropertyChanging();
					this._NewFolder = value;
					this.SendPropertyChanged("NewFolder");
					this.OnNewFolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FTPSubDirectory")]
	public partial class FTPSubDirectory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FTPSubID;
		
		private string _FTPSub;
		
		private System.Nullable<int> _Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFTPSubIDChanging(int value);
    partial void OnFTPSubIDChanged();
    partial void OnFTPSubChanging(string value);
    partial void OnFTPSubChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    #endregion
		
		public FTPSubDirectory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FTPSubID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FTPSubID
		{
			get
			{
				return this._FTPSubID;
			}
			set
			{
				if ((this._FTPSubID != value))
				{
					this.OnFTPSubIDChanging(value);
					this.SendPropertyChanging();
					this._FTPSubID = value;
					this.SendPropertyChanged("FTPSubID");
					this.OnFTPSubIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FTPSub", DbType="VarChar(1000)")]
		public string FTPSub
		{
			get
			{
				return this._FTPSub;
			}
			set
			{
				if ((this._FTPSub != value))
				{
					this.OnFTPSubChanging(value);
					this.SendPropertyChanging();
					this._FTPSub = value;
					this.SendPropertyChanged("FTPSub");
					this.OnFTPSubChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompanyFolders")]
	public partial class CompanyFolder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CompanyFolderID;
		
		private System.Nullable<int> _CompanyID;
		
		private string _FolderPath;
		
		private System.Nullable<bool> _NotActive;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private System.Nullable<int> _ParentID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyFolderIDChanging(int value);
    partial void OnCompanyFolderIDChanged();
    partial void OnCompanyIDChanging(System.Nullable<int> value);
    partial void OnCompanyIDChanged();
    partial void OnFolderPathChanging(string value);
    partial void OnFolderPathChanged();
    partial void OnNotActiveChanging(System.Nullable<bool> value);
    partial void OnNotActiveChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    #endregion
		
		public CompanyFolder()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyFolderID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CompanyFolderID
		{
			get
			{
				return this._CompanyFolderID;
			}
			set
			{
				if ((this._CompanyFolderID != value))
				{
					this.OnCompanyFolderIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyFolderID = value;
					this.SendPropertyChanged("CompanyFolderID");
					this.OnCompanyFolderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FolderPath", DbType="NVarChar(255)")]
		public string FolderPath
		{
			get
			{
				return this._FolderPath;
			}
			set
			{
				if ((this._FolderPath != value))
				{
					this.OnFolderPathChanging(value);
					this.SendPropertyChanging();
					this._FolderPath = value;
					this.SendPropertyChanged("FolderPath");
					this.OnFolderPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotActive", DbType="Bit")]
		public System.Nullable<bool> NotActive
		{
			get
			{
				return this._NotActive;
			}
			set
			{
				if ((this._NotActive != value))
				{
					this.OnNotActiveChanging(value);
					this.SendPropertyChanging();
					this._NotActive = value;
					this.SendPropertyChanged("NotActive");
					this.OnNotActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoanfileAssignments")]
	public partial class LoanfileAssignment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LoanfileAssignmentID;
		
		private int _UserID;
		
		private int _LoanfileID;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.DateTime _DueDate;
		
		private System.Nullable<System.DateTime> _CompletedDate;
		
		private System.Nullable<int> _LoanFileRoleID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoanfileAssignmentIDChanging(int value);
    partial void OnLoanfileAssignmentIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnLoanfileIDChanging(int value);
    partial void OnLoanfileIDChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnDueDateChanging(System.DateTime value);
    partial void OnDueDateChanged();
    partial void OnCompletedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompletedDateChanged();
    partial void OnLoanFileRoleIDChanging(System.Nullable<int> value);
    partial void OnLoanFileRoleIDChanged();
    #endregion
		
		public LoanfileAssignment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanfileAssignmentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LoanfileAssignmentID
		{
			get
			{
				return this._LoanfileAssignmentID;
			}
			set
			{
				if ((this._LoanfileAssignmentID != value))
				{
					this.OnLoanfileAssignmentIDChanging(value);
					this.SendPropertyChanging();
					this._LoanfileAssignmentID = value;
					this.SendPropertyChanged("LoanfileAssignmentID");
					this.OnLoanfileAssignmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanfileID", DbType="Int NOT NULL")]
		public int LoanfileID
		{
			get
			{
				return this._LoanfileID;
			}
			set
			{
				if ((this._LoanfileID != value))
				{
					this.OnLoanfileIDChanging(value);
					this.SendPropertyChanging();
					this._LoanfileID = value;
					this.SendPropertyChanged("LoanfileID");
					this.OnLoanfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="DateTime NOT NULL")]
		public System.DateTime DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompletedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompletedDate
		{
			get
			{
				return this._CompletedDate;
			}
			set
			{
				if ((this._CompletedDate != value))
				{
					this.OnCompletedDateChanging(value);
					this.SendPropertyChanging();
					this._CompletedDate = value;
					this.SendPropertyChanged("CompletedDate");
					this.OnCompletedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanFileRoleID", DbType="Int")]
		public System.Nullable<int> LoanFileRoleID
		{
			get
			{
				return this._LoanFileRoleID;
			}
			set
			{
				if ((this._LoanFileRoleID != value))
				{
					this.OnLoanFileRoleIDChanging(value);
					this.SendPropertyChanging();
					this._LoanFileRoleID = value;
					this.SendPropertyChanged("LoanFileRoleID");
					this.OnLoanFileRoleIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoanFileFRDates")]
	public partial class LoanFileFRDate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LoanFileFRDateID;
		
		private System.Nullable<int> _FRStatusID;
		
		private System.Nullable<System.DateTime> _FRStatusDate;
		
		private System.Nullable<int> _LoanFileID;
		
		private System.Nullable<int> _UserID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoanFileFRDateIDChanging(int value);
    partial void OnLoanFileFRDateIDChanged();
    partial void OnFRStatusIDChanging(System.Nullable<int> value);
    partial void OnFRStatusIDChanged();
    partial void OnFRStatusDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFRStatusDateChanged();
    partial void OnLoanFileIDChanging(System.Nullable<int> value);
    partial void OnLoanFileIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    #endregion
		
		public LoanFileFRDate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanFileFRDateID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LoanFileFRDateID
		{
			get
			{
				return this._LoanFileFRDateID;
			}
			set
			{
				if ((this._LoanFileFRDateID != value))
				{
					this.OnLoanFileFRDateIDChanging(value);
					this.SendPropertyChanging();
					this._LoanFileFRDateID = value;
					this.SendPropertyChanged("LoanFileFRDateID");
					this.OnLoanFileFRDateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FRStatusID", DbType="Int")]
		public System.Nullable<int> FRStatusID
		{
			get
			{
				return this._FRStatusID;
			}
			set
			{
				if ((this._FRStatusID != value))
				{
					this.OnFRStatusIDChanging(value);
					this.SendPropertyChanging();
					this._FRStatusID = value;
					this.SendPropertyChanged("FRStatusID");
					this.OnFRStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FRStatusDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FRStatusDate
		{
			get
			{
				return this._FRStatusDate;
			}
			set
			{
				if ((this._FRStatusDate != value))
				{
					this.OnFRStatusDateChanging(value);
					this.SendPropertyChanging();
					this._FRStatusDate = value;
					this.SendPropertyChanged("FRStatusDate");
					this.OnFRStatusDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanFileID", DbType="Int")]
		public System.Nullable<int> LoanFileID
		{
			get
			{
				return this._LoanFileID;
			}
			set
			{
				if ((this._LoanFileID != value))
				{
					this.OnLoanFileIDChanging(value);
					this.SendPropertyChanging();
					this._LoanFileID = value;
					this.SendPropertyChanged("LoanFileID");
					this.OnLoanFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class AuditData
	{
		
		private string _LastName;
		
		private string _LOANNBR;
		
		private string _AuditID;
		
		private string _AuditDesc;
		
		public AuditData()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="varchar(50)", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOANNBR", DbType="varchar(50)", CanBeNull=false)]
		public string LOANNBR
		{
			get
			{
				return this._LOANNBR;
			}
			set
			{
				if ((this._LOANNBR != value))
				{
					this._LOANNBR = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditID", DbType="varchar(5)", CanBeNull=false)]
		public string AuditID
		{
			get
			{
				return this._AuditID;
			}
			set
			{
				if ((this._AuditID != value))
				{
					this._AuditID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDesc", DbType="varchar(50)", CanBeNull=false)]
		public string AuditDesc
		{
			get
			{
				return this._AuditDesc;
			}
			set
			{
				if ((this._AuditDesc != value))
				{
					this._AuditDesc = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReportServers")]
	public partial class ReportServer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReportServerID;
		
		private string _ServerName;
		
		private string _ServerURL;
		
		private string _UserName;
		
		private string _Password;
		
		private string _DomainName;
		
		private string _ArchFolder;
		
		private string _NASFolder;
		
		private string _FTPFolder;
		
		private string _DropFolder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReportServerIDChanging(int value);
    partial void OnReportServerIDChanged();
    partial void OnServerNameChanging(string value);
    partial void OnServerNameChanged();
    partial void OnServerURLChanging(string value);
    partial void OnServerURLChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnDomainNameChanging(string value);
    partial void OnDomainNameChanged();
    partial void OnArchFolderChanging(string value);
    partial void OnArchFolderChanged();
    partial void OnNASFolderChanging(string value);
    partial void OnNASFolderChanged();
    partial void OnFTPFolderChanging(string value);
    partial void OnFTPFolderChanged();
    partial void OnDropFolderChanging(string value);
    partial void OnDropFolderChanged();
    #endregion
		
		public ReportServer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportServerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ReportServerID
		{
			get
			{
				return this._ReportServerID;
			}
			set
			{
				if ((this._ReportServerID != value))
				{
					this.OnReportServerIDChanging(value);
					this.SendPropertyChanging();
					this._ReportServerID = value;
					this.SendPropertyChanged("ReportServerID");
					this.OnReportServerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerName", DbType="NVarChar(50)")]
		public string ServerName
		{
			get
			{
				return this._ServerName;
			}
			set
			{
				if ((this._ServerName != value))
				{
					this.OnServerNameChanging(value);
					this.SendPropertyChanging();
					this._ServerName = value;
					this.SendPropertyChanged("ServerName");
					this.OnServerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerURL", DbType="NVarChar(500)")]
		public string ServerURL
		{
			get
			{
				return this._ServerURL;
			}
			set
			{
				if ((this._ServerURL != value))
				{
					this.OnServerURLChanging(value);
					this.SendPropertyChanging();
					this._ServerURL = value;
					this.SendPropertyChanged("ServerURL");
					this.OnServerURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DomainName", DbType="NVarChar(50)")]
		public string DomainName
		{
			get
			{
				return this._DomainName;
			}
			set
			{
				if ((this._DomainName != value))
				{
					this.OnDomainNameChanging(value);
					this.SendPropertyChanging();
					this._DomainName = value;
					this.SendPropertyChanged("DomainName");
					this.OnDomainNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArchFolder", DbType="VarChar(100)")]
		public string ArchFolder
		{
			get
			{
				return this._ArchFolder;
			}
			set
			{
				if ((this._ArchFolder != value))
				{
					this.OnArchFolderChanging(value);
					this.SendPropertyChanging();
					this._ArchFolder = value;
					this.SendPropertyChanged("ArchFolder");
					this.OnArchFolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NASFolder", DbType="VarChar(100)")]
		public string NASFolder
		{
			get
			{
				return this._NASFolder;
			}
			set
			{
				if ((this._NASFolder != value))
				{
					this.OnNASFolderChanging(value);
					this.SendPropertyChanging();
					this._NASFolder = value;
					this.SendPropertyChanged("NASFolder");
					this.OnNASFolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FTPFolder", DbType="VarChar(100)")]
		public string FTPFolder
		{
			get
			{
				return this._FTPFolder;
			}
			set
			{
				if ((this._FTPFolder != value))
				{
					this.OnFTPFolderChanging(value);
					this.SendPropertyChanging();
					this._FTPFolder = value;
					this.SendPropertyChanged("FTPFolder");
					this.OnFTPFolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DropFolder", DbType="VarChar(100)")]
		public string DropFolder
		{
			get
			{
				return this._DropFolder;
			}
			set
			{
				if ((this._DropFolder != value))
				{
					this.OnDropFolderChanging(value);
					this.SendPropertyChanging();
					this._DropFolder = value;
					this.SendPropertyChanged("DropFolder");
					this.OnDropFolderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class LoanDetail
	{
		
		private string _LastName;
		
		private string _LoanNbr;
		
		private string _AuditID;
		
		private string _AuditName;
		
		private string _LoanPath;
		
		private int _CompanyID;
		
		private System.Nullable<bool> _IsFulfillment;
		
		private System.Nullable<int> _LoanFileAuditID;
		
		public LoanDetail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanNbr", CanBeNull=false)]
		public string LoanNbr
		{
			get
			{
				return this._LoanNbr;
			}
			set
			{
				if ((this._LoanNbr != value))
				{
					this._LoanNbr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditID", CanBeNull=false)]
		public string AuditID
		{
			get
			{
				return this._AuditID;
			}
			set
			{
				if ((this._AuditID != value))
				{
					this._AuditID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditName", CanBeNull=false)]
		public string AuditName
		{
			get
			{
				return this._AuditName;
			}
			set
			{
				if ((this._AuditName != value))
				{
					this._AuditName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanPath", CanBeNull=false)]
		public string LoanPath
		{
			get
			{
				return this._LoanPath;
			}
			set
			{
				if ((this._LoanPath != value))
				{
					this._LoanPath = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID")]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this._CompanyID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFulfillment")]
		public System.Nullable<bool> IsFulfillment
		{
			get
			{
				return this._IsFulfillment;
			}
			set
			{
				if ((this._IsFulfillment != value))
				{
					this._IsFulfillment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanFileAuditID")]
		public System.Nullable<int> LoanFileAuditID
		{
			get
			{
				return this._LoanFileAuditID;
			}
			set
			{
				if ((this._LoanFileAuditID != value))
				{
					this._LoanFileAuditID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class SweeperFolders
	{
		
		private string _SweeperFolder;
		
		private int _ServiceID;
		
		private int _SweeperType;
		
		private bool _MortgageTransfer;
		
		private bool _isActive;
		
		private int _PathLocationType;
		
		private string _FolderPath;
		
		private string _ILMInPath;
		
		private string _ILMOutPath;
		
		public SweeperFolders()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SweeperFolder", CanBeNull=false)]
		public string SweeperFolder
		{
			get
			{
				return this._SweeperFolder;
			}
			set
			{
				if ((this._SweeperFolder != value))
				{
					this._SweeperFolder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID")]
		public int ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					this._ServiceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SweeperType")]
		public int SweeperType
		{
			get
			{
				return this._SweeperType;
			}
			set
			{
				if ((this._SweeperType != value))
				{
					this._SweeperType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MortgageTransfer")]
		public bool MortgageTransfer
		{
			get
			{
				return this._MortgageTransfer;
			}
			set
			{
				if ((this._MortgageTransfer != value))
				{
					this._MortgageTransfer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isActive")]
		public bool isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this._isActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathLocationType")]
		public int PathLocationType
		{
			get
			{
				return this._PathLocationType;
			}
			set
			{
				if ((this._PathLocationType != value))
				{
					this._PathLocationType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="folderPath", Storage="_FolderPath", CanBeNull=false)]
		public string FolderPath
		{
			get
			{
				return this._FolderPath;
			}
			set
			{
				if ((this._FolderPath != value))
				{
					this._FolderPath = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ilminpath", Storage="_ILMInPath")]
		public string ILMInPath
		{
			get
			{
				return this._ILMInPath;
			}
			set
			{
				if ((this._ILMInPath != value))
				{
					this._ILMInPath = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ilmoutpath", Storage="_ILMOutPath")]
		public string ILMOutPath
		{
			get
			{
				return this._ILMOutPath;
			}
			set
			{
				if ((this._ILMOutPath != value))
				{
					this._ILMOutPath = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
